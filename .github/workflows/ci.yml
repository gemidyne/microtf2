name: "Build Validation"

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ dev, master ]
    paths: [ 'src/scripting/**' ]
  pull_request:
    branches: [ dev, master ]
    paths: [ 'src/scripting/**' ]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        smver: ['1.11.x', '1.12.x']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set environment variables
        run: echo SCRIPTS_PATH=$(pwd) >> $GITHUB_ENV
      
      - name: Download includes
        uses: actions/checkout@v2
        with:
          repository: gemidyne/gh-actions-resources
          path: './ext'

      - name: Setup SourceMod compiler (${{ matrix.smver }})
        uses: rumblefrog/setup-sp@master
        with:
          version: ${{ matrix.smver }}

      - name: Copy includes
        run: |
          cp ./ext/sourcepawn/includes/* $includePath
          cp ./src/scripting/include/* $includePath

      - name: Compile gamemode 
        run: spcomp -i $includePath src/scripting/AS-MicroTF2.sp -o src/scripting/AS-MicroTF2.smx -E -O2 -v2
        working-directory: ${{ env.SCRIPTS_PATH }}
        
      - name: Compile SDK
        run: spcomp -i $includePath src/scripting/AS-MicroTF2-SDK.sp -o src/scripting/AS-MicroTF2-SDK.smx -E -O2 -v2
        working-directory: ${{ env.SCRIPTS_PATH }}
        
      - name: Compile SDK/MapChooser integration
        run: spcomp -i $includePath src/scripting/AS-MicroTF2-MapChooser.sp -o src/scripting/AS-MicroTF2-MapChooser.smx -E -O2 -v2
        working-directory: ${{ env.SCRIPTS_PATH }}
        
      - name: Compile SDK/Example integration
        run: spcomp -i $includePath src/scripting/AS-MicroTF2-ExampleIntegration.sp -o src/scripting/AS-MicroTF2-ExampleIntegration.smx -E -O2 -v2
        working-directory: ${{ env.SCRIPTS_PATH }}

      - name: Create artifact structure
        run: |
          mkdir -p rel/tf/addons/sourcemod/data
          mkdir -p rel/tf/addons/sourcemod/gamedata
          mkdir -p rel/tf/addons/sourcemod/plugins
          mkdir -p rel/tf/addons/sourcemod/translations
          cp -r src/data/* rel/tf/addons/sourcemod/data/
          cp -r src/gamedata/* rel/tf/addons/sourcemod/gamedata/
          cp src/scripting/AS-MicroTF2.smx rel/tf/addons/sourcemod/plugins/AS-MicroTF2.smx
          cp -r src/translations/* rel/tf/addons/sourcemod/translations/
          rm rel/tf/addons/sourcemod/translations/*.tsutproj
        working-directory: ${{ env.SCRIPTS_PATH }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin_SM_${{ matrix.smver }}
          path: rel/
